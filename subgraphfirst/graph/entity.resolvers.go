package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.73

import (
	"context"
	"fmt"
	"subgraphfirst/graph/model"
)

// FindAccountByAccountReferenceID is the resolver for the findAccountByAccountReferenceID field.
func (r *entityResolver) FindAccountByAccountReferenceID(ctx context.Context, accountReferenceID string) (*model.Account, error) {
	panic(fmt.Errorf("not implemented: FindAccountByAccountReferenceID - findAccountByAccountReferenceID"))
}

// FindCustomerByCustomerReferenceID is the resolver for the findCustomerByCustomerReferenceID field.
func (r *entityResolver) FindCustomerByCustomerReferenceID(ctx context.Context, customerReferenceID string) (*model.Customer, error) {
	panic(fmt.Errorf("not implemented: FindCustomerByCustomerReferenceID - findCustomerByCustomerReferenceID"))
}

// FindTransactionByTransactionID is the resolver for the findTransactionByTransactionID field.
func (r *entityResolver) FindTransactionByTransactionID(ctx context.Context, transactionID string) (*model.Transaction, error) {
	panic(fmt.Errorf("not implemented: FindTransactionByTransactionID - findTransactionByTransactionID"))
}

// Entity returns EntityResolver implementation.
func (r *Resolver) Entity() EntityResolver { return &entityResolver{r} }

type entityResolver struct{ *Resolver }
