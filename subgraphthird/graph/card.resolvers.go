package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.73

import (
	"context"
	"fmt"
	"subgraphthird/graph/data"
	"subgraphthird/graph/model"
)

// GetCard is the resolver for the getCard field.
func (r *queryResolver) GetCard(ctx context.Context, cardReferenceID string) (*model.Card, error) {
	for _, card := range data.Cards() {
		// Check if the cardReferenceID matches
		if card.CardReferenceID == cardReferenceID {
			return card, nil
		}
	}
	// Return an error if the card is not found
	return nil, fmt.Errorf("card with ID %s not found", cardReferenceID)
}

// GetCards is the resolver for the getCards field.
func (r *queryResolver) GetCards(ctx context.Context, cardReferenceID string) ([]*model.Card, error) {
	panic(fmt.Errorf("not implemented: GetCards - getCards"))
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
